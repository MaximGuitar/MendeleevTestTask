{
	"CIBlockElement.GetElementGroups": {
		"scope": "php",
		"prefix": ["CIBlockElementGetElementGroups", "CIBlockElementGroups", "ElementSections", "все разделы элемента"],
		"body": [
			"\\$rdbCurrentSections = \\\\CIBlockElement::GetElementGroups(",
			"\t\t\\$ElementId,",
			"\t\ttrue, // необходимость выборки привязок и из свойств типа 'Привязка к разделу'. true - не выбирать, по умолчанию false",
			"\t\t['ID','IBLOCK_ID']",
			"\t);",
			"while(\\$dctSection = \\$rdbCurrentSections->Fetch()) {",
			"\t\\$lstCurrentSectionsIDs[] = \\$dctSection['ID'];",
			"}"
		],
		"description": "Получить все разделы элемента к которому он привязан"
	},
	"CIBlockElement.Add": {
		"scope": "php",
		"prefix": ["CIBlockElementAdd", "AddElement"],
		"body": [
			"\\$rsElement = new \\\\CIBlockElement;",
			"\\$dctFields = array(",
			"\t'ACTIVE'            => 'Y',",
			"\t'NAME'              => '${1:name}',",
			"\t'PROPERTY_VALUES'   => array(",
			"\t\t//propertys array ...",
			"\t)",
			");",
			"if(!\\$id = \\$rsElement->Add(\\$dctFields)) {",
			"\techo 'Error:' . \\$rsElement->LAST_ERROR;",
			"}"
		],
		"description": "Добавляет новый элемент."
	},
	"CIBlockElement.Delete": {
		"scope": "php",
		"prefix": ["CIBlockElementDel", "DeleteElement"],
		"body": ["\\\\CIBlockElement::Delete('${1:ID}');"],
		"description": "Удаляет элемент из информационного блока."
	},
	"CIBlockElement.GetByID": {
		"scope": "php",
		"prefix": "CIBlockElementID",
		"body": [
			"\\$dctElement = \\\\CIBlockElement::GetByID('${1:ID}')->fetch();",
			"if(is_array(\\$dctElement)) {",
			"\t//body ...",
			"}"
		],
		"description": "Возвращает элемент по его ID."
	},
	"CIBlockElement.GetList": {
		"scope": "php",
		"prefix": ["CIBlockElementList", "GetListElements"],
		"body": [
			"\\$db_res = \\\\CIBlockElement::GetList("
			"\t[],",
			"\t[",
			"\t\t'IBLOCK_ID'=> \\$IBLOCK_ID,"
			"\t\t'SECTION_ID' => \\$SECTION_ID,"
			"\t\t'ACTIVE_DATE' => 'Y',",
			"\t\t'ACTIVE'=>'Y',",
			"\t],",
			"\tfalse,",
			"\tfalse,",
			"\t['IBLOCK_ID','ID','NAME','PREVIEW_TEXT','PREVIEW_PICTURE','DETAIL_TEXT','DETAIL_PICTURE']"
			");",
			"while(\\$arElem = \\$db_res->fetch()) {",
			"\t\\$lstElements[] = \\$arElem;",
			"}"
		],
		"description": "Возвращает список элементов по фильтру."
	},
	"CIBlockElement.Update": {
		"scope": "php",
		"prefix": ["CIBlocElementUpdate", "UpdateElement"],
		"body": [
			"\\$rsElement = new \\\\CIBlockElement;",
			"\\$dctFields = array(",
			"\t'ACTIVE'    => 'Y',",
			"\t//...",
			");",
			"\\$rsIDElement = \\$rsElement->Update(${1:'id'}, \\$dctFields);"
		],
		"description": "Изменяет элемент."
	},
	"CIBlockElement.SetPropertyValuesEx": {
		"scope": "php",
		"prefix": [
			"CIBlockElementSetPropertyValuesEx",
			"CIBlockElementUpdatePropertyValuesEx",
			"ElementPropertySet",
			"ElementPropertyUpdate"
		],
		"body": [
			"// https://dev.1c-bitrix.ru/api_help/iblock/classes/ciblockelement/setpropertyvaluesex.php",
			"\\\\CIBlockElement::SetPropertyValuesEx(",
			"\t\t\\$ElementId, // Ид элемента",
			"\t\tfalse, // Ид информационного блока (Может быть не указан.) ",
			"\t\t[\\$PropCode => \\$Value] // Массив значений свойств ",
			"\t);"
		],
		"description": "Изменяет значение свойства элемента"
	}
}
